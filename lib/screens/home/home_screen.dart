import 'package:flutter/material.dart';
import 'package:flutter_svg/svg.dart';

import '../../models/course.dart';
import 'components/course_card.dart';

class HomeScreen extends StatelessWidget {
  const HomeScreen({super.key});

  @override
  Widget build(BuildContext context) {
    return Scaffold(

      body: SafeArea(
        // bottom: false is a property of the SafeArea widget. When you set bottom to false, it indicates that you want the padding provided by SafeArea to not include the bottom edge of the screen.
        // In other words, the padding will only be applied to the top, left, and right edges of the screen, and not to the bottom edge.
        bottom: false,

        child: SingleChildScrollView(
          child: Column(
            crossAxisAlignment: CrossAxisAlignment.start,
            children: [
              const SizedBox(height: 40,),
              Padding(
                padding: const EdgeInsets.all(20),
                child: Text("Courses", style: Theme.of(context).textTheme.headlineMedium!.copyWith(
                    color: Colors.black,
                    fontWeight: FontWeight.w600),
                ),
              ),

              //  The '...courses.map((course) =>' is using the map function to transform each 'Course' object from the 'courses' list into a 'CourseCard' widget, and then the 'toList()' function is used to convert the resulting iterable into a list of 'CourseCard' widgets
              // The 'map' function is called on the 'courses' list. It iterates through each element of the list and applies a function to transform each element into something else.
              // In this case, you're transforming each 'Course' object into a 'CourseCard' widget
              // '... Spread Operator':
              // The 'spread operator (...)' is used to expand the elements of the transformed iterable (generated by the map function) into the list of widgets that will be children of some parent widget (likely a Column or ListView).
             // 'toList() Function':
              // The toList() function is called on the expanded iterable to convert it into a list. This is necessary because some widgets (like Column or ListView) expect a list of widgets as their children.
              SingleChildScrollView(
                scrollDirection: Axis.horizontal,
                child: Row(children: [
                  ...courses.map((course) => Padding(
                    padding: const EdgeInsets.only(left: 20),
                    child: CourseCard(course: course),
                  )).toList(),
                ],),
              ),

              Padding(
                padding: const EdgeInsets.all(20),
                child: Text(
                  "Recent",
                  style: Theme.of(context)
                      .textTheme
                      .headlineSmall!
                      .copyWith(
                    color: Colors.black,
                    fontWeight: FontWeight.w600),
                ),
              ),


              // recentCourses is the list of Course objects you defined earlier.
              // The .map() function iterates through each element (course) in the recentCourses list.
              // For each course, it creates a new instance of the SecondaryCourseCard widget by passing the course object to its constructor.
              // So, for each course in the recentCourses list, the .map() function will create a corresponding SecondaryCourseCard widget, passing the course object to it.
              ...recentCourses.map((course) => Padding(
                padding: const EdgeInsets.only(left: 20, right: 20, bottom: 20),
                child: SecondaryCourseCard(course: course,),
              ))

            ],
          ),
        ),
      ),
    );
  }
}

class SecondaryCourseCard extends StatelessWidget {
  const SecondaryCourseCard({
    super.key,
    required this.course,
  });

  final Course course;

  @override
  Widget build(BuildContext context) {
    return Container(
      padding: EdgeInsets.symmetric(horizontal: 24, vertical: 20),
      decoration: BoxDecoration(
        color: course.bgColor,
        borderRadius: BorderRadius.all(Radius.circular(20)),
      ),
      child: Row(
        children: [
          Expanded(    // this expanded widget will make sure for the Column to take up all the available space inside the row and its content can adjust if screen size reduce or increase
              child: Column(
                children: [
                  Text(
                      course.title,
                style: Theme.of(context)
                    .textTheme
                    .headlineSmall!
                    .copyWith(
                    color: Colors.white,
                    fontWeight: FontWeight.w600)
                  ),


                  Text(
                    "watch video -15 mins",
                    style: TextStyle(color: Colors.white60, fontSize: 16)
                  )
                ],
              )
          ),

          SizedBox(
            height: 40,
            child: VerticalDivider(
              color: Colors.white70,
            ),
          ),

          SizedBox(width: 8,),

          SvgPicture.asset(course.iconSrc),

        ],
      ),
    );
  }
}

